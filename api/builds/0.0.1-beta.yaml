openapi: 3.0.0
info:
  title: HarmonyUI V1 API
  description: Use these APIs to interact with the  HarmonyUI backend. You can find out more about the HarmonyUI project at htttps://github.com/MediaEase/HarmonyUI
  termsOfService: https:///github.com/MediaEase/HarmonyUI/tos
  contact:
    name: MediaEase
    url: htttps://github.com/MediaEase/MediaEase
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: current
servers:
  - url: http://localhost:8000
    description: Local development server
security:
  - Bearer: []
  - apiKey: []
tags:
  - name: Apps
    description: Apps related endpoints
  - name: Authentication
    description: Authentication related endpoints
  - name: Metrics
    description: Metrics related endpoints
  - name: Profile
    description: Profile related endpoints
  - name: Store
    description: Store related endpoints
  - name: Users
    description: Users related endpoints
paths:
  /api/store:
    get:
      tags:
        - Store
      summary: Get store
      operationId: getStore
      responses:
        '200':
          description: Returns store
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Store'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
    apiKey:
      type: apiKey
      description: 'Value: {apiKey}'
      in: header
      name: X-API-KEY
  schemas:
    App:
      type: object
      properties:
        name:
          type: string
        altname:
          type: string
        logo:
          type: string
        type:
          type: string
          enum:
            - remote
            - media
            - automation
            - download
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
        store:
          type: object
          properties:
            id:
              type: integer
    LocaleOrigin:
      type: string
      enum:
        - DEFAULT
        - REQUEST
      description: An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.
      example: DEFAULT
    ErrorMessageDto:
      type: object
      properties:
        locale:
          type: string
          description: The locale for the message text, a BCP 47 language tag.
          example: en-US
        localeOrigin:
          $ref: '#/components/schemas/LocaleOrigin'
        text:
          type: string
          description: Actual text of the error message in the indicated locale.
          example: The request was syntactically correct but its content is semantically invalid.
    ErrorResponseDto:
      type: object
      properties:
        detailCode:
          type: string
          description: Fine-grained error code providing more detail of the error.
          example: 400.1 Bad Request Content
        trackingId:
          type: string
          description: Unique tracking id for the error.
          example: e7eab60924f64aa284175b9fa3309599
        messages:
          type: array
          description: Generic localized reason for error
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
        causes:
          type: array
          description: Plain-text descriptive reasons to provide additional detail to the text provided in the messages field
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        roles:
          type: array
          items:
            type: string
        mounts:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              rclone:
                type: boolean
        email:
          type: string
        isVerified:
          type: boolean
        preference:
          type: object
          properties:
            pinnedApps:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
            display:
              type: string
            shell:
              type: string
            selectedWidgets:
              type: array
              items:
                type: string
            theme:
              type: string
        apiKey:
          type: string
    Cpu:
      type: object
      properties:
        model:
          type: string
        percentage:
          type: number
          format: double
        loadAverage:
          type: object
          properties:
            1min:
              type: number
              format: double
            5min:
              type: number
              format: double
            15min:
              type: number
              format: double
    Disk:
      type: object
      properties:
        total:
          type: number
        used:
          type: number
        free:
          type: number
        percentage:
          type: number
    Memory:
      type: object
      properties:
        total:
          type: number
          format: float
          description: Total amount of RAM available, in MB.
        used:
          type: number
          format: float
          description: Amount of RAM used, in MB.
        free:
          type: number
          format: float
          description: Amount of free RAM, in MB.
        available:
          type: number
          format: float
          description: Amount of RAM available for use, in MB.
        percentage:
          type: number
          format: float
          description: Percentage of RAM currently used.
    Network:
      type: object
      properties:
        interface:
          type: string
        downloadSpeed:
          type: number
          format: float
        uploadSpeed:
          type: number
          format: float
    Preferences:
      type: object
      properties:
        pinnedApps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
        display:
          type: string
        shell:
          type: string
        selectedWidgets:
          type: array
          items:
            type: string
        theme:
          type: string
    PinnedApp:
      type: object
      properties:
        pin:
          type: string
    Theme:
      type: object
      properties:
        theme:
          type: string
    Lang:
      type: object
      properties:
        language:
          type: string
    Shell:
      type: object
      properties:
        shell:
          type: string
    Display:
      type: object
      properties:
        display:
          type: string
    Widget:
      type: object
      properties:
        widgets:
          type: array
          items:
            type: string
    MyApps:
      type: object
      properties:
        apps:
          type: string
    Service:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        icon:
          type: string
        color:
          type: string
    ServiceStatus:
      type: object
      properties:
        message:
          type: string
    Store:
      type: object
      properties:
        name:
          type: string
        altName:
          type: string
        description:
          type: string
        type:
          type: string
        isPro:
          type: boolean
        isAvailable:
          type: boolean
  responses:
    '204':
      description: No content - indicates the request was successful but there is no content to be returned in the response.
    '400':
      description: Client Error - Returned if the request body is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
    '401':
      description: Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                description: A message describing the error
                example: 'JWT validation failed: JWT is expired'
    '403':
      description: Forbidden - Returned if the user you are running as, doesn't have access to this end-point.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
          examples:
            '403':
              summary: An example of a 403 response object
              value:
                detailCode: 403 Forbidden
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                  - locale: en-US
                    localeOrigin: DEFAULT
                    text: The server understood the request but refuses to authorize it.
    '404':
      description: Not Found - returned if the request URL refers to a resource or object that does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
          examples:
            '404':
              summary: An example of a 404 response object
              value:
                detailCode: 404 Not found
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                  - locale: en-US
                    localeOrigin: DEFAULT
                    text: The server did not find a current representation for the target resource.
    '405':
      description: Method Not Allowed - indicates that the server knows the request method, but the target resource doesn't support this method.
      content:
        application/json:
          schema:
            type: object
            properties:
              errorName:
                description: A message describing the error
                example: NotSupportedException
              errorMessage:
                description: Description of the error
                example: Cannot consume content type
              trackingId:
                type: string
                description: Unique tracking id for the error.
                example: e7eab60924f64aa284175b9fa3309599
    '422':
      description: Unprocessable Entity - Returned if the request was not processed due to validation errors.
    '500':
      description: Internal Server Error - Returned if there is an unexpected error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
          examples:
            '500':
              summary: An example of a 500 response object
              value:
                detailCode: 500.0 Internal Fault
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                  - locale: en-US
                    localeOrigin: DEFAULT
                    text: An internal fault occurred.
